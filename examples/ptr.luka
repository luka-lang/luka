extern printf(format: s8*, ...: any*): s32;
extern malloc(size: u64): any*;
extern realloc(ptr: any*, size: u64): any*;
extern strcpy(ptr: string, str: string): string;
extern strcat(ptr: string, str: string): string;
extern free(ptr: any*): void;

fn main() {
    // Pointers to stack memory
    let num = 32;
    let mut p = &num;
    printf("Num %d %p.\n", num, p);
    *p = 12;
    printf("Num %d %p.\n", num, p);

    let ptr: s32* = malloc(4);
    free(ptr);

    // Pointers to heap memory
    // Initial memory allocation
    let mut str: u8* = malloc(15);

    strcpy(str, "luka is a nice");
    printf("String = %s\t\t\t\tAddress = %p\n", str, str);

    // Reallocating memory
    str = realloc(str, 36);
    strcat(str, " programming language");
    printf("String = %s\tAddress = %p\n", str, str);

    free(str);

    0
}
